/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SkillsImport } from './routes/skills'
import { Route as QuestsImport } from './routes/quests'
import { Route as ProfileSettImport } from './routes/profile-sett'
import { Route as ProfileImport } from './routes/profile'
import { Route as PointsImport } from './routes/points'
import { Route as PeopleImport } from './routes/people'
import { Route as NotifImport } from './routes/notif'
import { Route as MyMeetingsImport } from './routes/my-meetings'
import { Route as MeetingsImport } from './routes/meetings'
import { Route as MeetingEditImport } from './routes/meeting-edit'
import { Route as InviteImport } from './routes/invite'
import { Route as InventoryImport } from './routes/inventory'
import { Route as HistoryImport } from './routes/history'
import { Route as FillProfileImport } from './routes/fill-profile'
import { Route as FavouritesImport } from './routes/favourites'
import { Route as FastMeetSettImport } from './routes/fastMeet-sett'
import { Route as CreateMeetImport } from './routes/createMeet'
import { Route as CreateFastMeetImport } from './routes/create-fastMeet'
import { Route as CalendarImport } from './routes/calendar'
import { Route as AchievmentsImport } from './routes/achievments'
import { Route as IndexImport } from './routes/index'
import { Route as UserQuestsPageImport } from './routes/user-quests.$page'
import { Route as UserQuestsIdImport } from './routes/user-quests.$id'
import { Route as UserProfileIdImport } from './routes/user-profile.$id'
import { Route as UserMeetingsIdImport } from './routes/user-meetings.$id'
import { Route as MeetIdImport } from './routes/meet.$id'
import { Route as AllNameImport } from './routes/all.$name'
import { Route as EventNameIdImport } from './routes/event.$name.$id'

// Create/Update Routes

const SkillsRoute = SkillsImport.update({
  id: '/skills',
  path: '/skills',
  getParentRoute: () => rootRoute,
} as any)

const QuestsRoute = QuestsImport.update({
  id: '/quests',
  path: '/quests',
  getParentRoute: () => rootRoute,
} as any)

const ProfileSettRoute = ProfileSettImport.update({
  id: '/profile-sett',
  path: '/profile-sett',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const PointsRoute = PointsImport.update({
  id: '/points',
  path: '/points',
  getParentRoute: () => rootRoute,
} as any)

const PeopleRoute = PeopleImport.update({
  id: '/people',
  path: '/people',
  getParentRoute: () => rootRoute,
} as any)

const NotifRoute = NotifImport.update({
  id: '/notif',
  path: '/notif',
  getParentRoute: () => rootRoute,
} as any)

const MyMeetingsRoute = MyMeetingsImport.update({
  id: '/my-meetings',
  path: '/my-meetings',
  getParentRoute: () => rootRoute,
} as any)

const MeetingsRoute = MeetingsImport.update({
  id: '/meetings',
  path: '/meetings',
  getParentRoute: () => rootRoute,
} as any)

const MeetingEditRoute = MeetingEditImport.update({
  id: '/meeting-edit',
  path: '/meeting-edit',
  getParentRoute: () => rootRoute,
} as any)

const InviteRoute = InviteImport.update({
  id: '/invite',
  path: '/invite',
  getParentRoute: () => rootRoute,
} as any)

const InventoryRoute = InventoryImport.update({
  id: '/inventory',
  path: '/inventory',
  getParentRoute: () => rootRoute,
} as any)

const HistoryRoute = HistoryImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => rootRoute,
} as any)

const FillProfileRoute = FillProfileImport.update({
  id: '/fill-profile',
  path: '/fill-profile',
  getParentRoute: () => rootRoute,
} as any)

const FavouritesRoute = FavouritesImport.update({
  id: '/favourites',
  path: '/favourites',
  getParentRoute: () => rootRoute,
} as any)

const FastMeetSettRoute = FastMeetSettImport.update({
  id: '/fastMeet-sett',
  path: '/fastMeet-sett',
  getParentRoute: () => rootRoute,
} as any)

const CreateMeetRoute = CreateMeetImport.update({
  id: '/createMeet',
  path: '/createMeet',
  getParentRoute: () => rootRoute,
} as any)

const CreateFastMeetRoute = CreateFastMeetImport.update({
  id: '/create-fastMeet',
  path: '/create-fastMeet',
  getParentRoute: () => rootRoute,
} as any)

const CalendarRoute = CalendarImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => rootRoute,
} as any)

const AchievmentsRoute = AchievmentsImport.update({
  id: '/achievments',
  path: '/achievments',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserQuestsPageRoute = UserQuestsPageImport.update({
  id: '/user-quests/$page',
  path: '/user-quests/$page',
  getParentRoute: () => rootRoute,
} as any)

const UserQuestsIdRoute = UserQuestsIdImport.update({
  id: '/user-quests/$id',
  path: '/user-quests/$id',
  getParentRoute: () => rootRoute,
} as any)

const UserProfileIdRoute = UserProfileIdImport.update({
  id: '/user-profile/$id',
  path: '/user-profile/$id',
  getParentRoute: () => rootRoute,
} as any)

const UserMeetingsIdRoute = UserMeetingsIdImport.update({
  id: '/user-meetings/$id',
  path: '/user-meetings/$id',
  getParentRoute: () => rootRoute,
} as any)

const MeetIdRoute = MeetIdImport.update({
  id: '/meet/$id',
  path: '/meet/$id',
  getParentRoute: () => rootRoute,
} as any)

const AllNameRoute = AllNameImport.update({
  id: '/all/$name',
  path: '/all/$name',
  getParentRoute: () => rootRoute,
} as any)

const EventNameIdRoute = EventNameIdImport.update({
  id: '/event/$name/$id',
  path: '/event/$name/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/achievments': {
      id: '/achievments'
      path: '/achievments'
      fullPath: '/achievments'
      preLoaderRoute: typeof AchievmentsImport
      parentRoute: typeof rootRoute
    }
    '/calendar': {
      id: '/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarImport
      parentRoute: typeof rootRoute
    }
    '/create-fastMeet': {
      id: '/create-fastMeet'
      path: '/create-fastMeet'
      fullPath: '/create-fastMeet'
      preLoaderRoute: typeof CreateFastMeetImport
      parentRoute: typeof rootRoute
    }
    '/createMeet': {
      id: '/createMeet'
      path: '/createMeet'
      fullPath: '/createMeet'
      preLoaderRoute: typeof CreateMeetImport
      parentRoute: typeof rootRoute
    }
    '/fastMeet-sett': {
      id: '/fastMeet-sett'
      path: '/fastMeet-sett'
      fullPath: '/fastMeet-sett'
      preLoaderRoute: typeof FastMeetSettImport
      parentRoute: typeof rootRoute
    }
    '/favourites': {
      id: '/favourites'
      path: '/favourites'
      fullPath: '/favourites'
      preLoaderRoute: typeof FavouritesImport
      parentRoute: typeof rootRoute
    }
    '/fill-profile': {
      id: '/fill-profile'
      path: '/fill-profile'
      fullPath: '/fill-profile'
      preLoaderRoute: typeof FillProfileImport
      parentRoute: typeof rootRoute
    }
    '/history': {
      id: '/history'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof HistoryImport
      parentRoute: typeof rootRoute
    }
    '/inventory': {
      id: '/inventory'
      path: '/inventory'
      fullPath: '/inventory'
      preLoaderRoute: typeof InventoryImport
      parentRoute: typeof rootRoute
    }
    '/invite': {
      id: '/invite'
      path: '/invite'
      fullPath: '/invite'
      preLoaderRoute: typeof InviteImport
      parentRoute: typeof rootRoute
    }
    '/meeting-edit': {
      id: '/meeting-edit'
      path: '/meeting-edit'
      fullPath: '/meeting-edit'
      preLoaderRoute: typeof MeetingEditImport
      parentRoute: typeof rootRoute
    }
    '/meetings': {
      id: '/meetings'
      path: '/meetings'
      fullPath: '/meetings'
      preLoaderRoute: typeof MeetingsImport
      parentRoute: typeof rootRoute
    }
    '/my-meetings': {
      id: '/my-meetings'
      path: '/my-meetings'
      fullPath: '/my-meetings'
      preLoaderRoute: typeof MyMeetingsImport
      parentRoute: typeof rootRoute
    }
    '/notif': {
      id: '/notif'
      path: '/notif'
      fullPath: '/notif'
      preLoaderRoute: typeof NotifImport
      parentRoute: typeof rootRoute
    }
    '/people': {
      id: '/people'
      path: '/people'
      fullPath: '/people'
      preLoaderRoute: typeof PeopleImport
      parentRoute: typeof rootRoute
    }
    '/points': {
      id: '/points'
      path: '/points'
      fullPath: '/points'
      preLoaderRoute: typeof PointsImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/profile-sett': {
      id: '/profile-sett'
      path: '/profile-sett'
      fullPath: '/profile-sett'
      preLoaderRoute: typeof ProfileSettImport
      parentRoute: typeof rootRoute
    }
    '/quests': {
      id: '/quests'
      path: '/quests'
      fullPath: '/quests'
      preLoaderRoute: typeof QuestsImport
      parentRoute: typeof rootRoute
    }
    '/skills': {
      id: '/skills'
      path: '/skills'
      fullPath: '/skills'
      preLoaderRoute: typeof SkillsImport
      parentRoute: typeof rootRoute
    }
    '/all/$name': {
      id: '/all/$name'
      path: '/all/$name'
      fullPath: '/all/$name'
      preLoaderRoute: typeof AllNameImport
      parentRoute: typeof rootRoute
    }
    '/meet/$id': {
      id: '/meet/$id'
      path: '/meet/$id'
      fullPath: '/meet/$id'
      preLoaderRoute: typeof MeetIdImport
      parentRoute: typeof rootRoute
    }
    '/user-meetings/$id': {
      id: '/user-meetings/$id'
      path: '/user-meetings/$id'
      fullPath: '/user-meetings/$id'
      preLoaderRoute: typeof UserMeetingsIdImport
      parentRoute: typeof rootRoute
    }
    '/user-profile/$id': {
      id: '/user-profile/$id'
      path: '/user-profile/$id'
      fullPath: '/user-profile/$id'
      preLoaderRoute: typeof UserProfileIdImport
      parentRoute: typeof rootRoute
    }
    '/user-quests/$id': {
      id: '/user-quests/$id'
      path: '/user-quests/$id'
      fullPath: '/user-quests/$id'
      preLoaderRoute: typeof UserQuestsIdImport
      parentRoute: typeof rootRoute
    }
    '/user-quests/$page': {
      id: '/user-quests/$page'
      path: '/user-quests/$page'
      fullPath: '/user-quests/$page'
      preLoaderRoute: typeof UserQuestsPageImport
      parentRoute: typeof rootRoute
    }
    '/event/$name/$id': {
      id: '/event/$name/$id'
      path: '/event/$name/$id'
      fullPath: '/event/$name/$id'
      preLoaderRoute: typeof EventNameIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/achievments': typeof AchievmentsRoute
  '/calendar': typeof CalendarRoute
  '/create-fastMeet': typeof CreateFastMeetRoute
  '/createMeet': typeof CreateMeetRoute
  '/fastMeet-sett': typeof FastMeetSettRoute
  '/favourites': typeof FavouritesRoute
  '/fill-profile': typeof FillProfileRoute
  '/history': typeof HistoryRoute
  '/inventory': typeof InventoryRoute
  '/invite': typeof InviteRoute
  '/meeting-edit': typeof MeetingEditRoute
  '/meetings': typeof MeetingsRoute
  '/my-meetings': typeof MyMeetingsRoute
  '/notif': typeof NotifRoute
  '/people': typeof PeopleRoute
  '/points': typeof PointsRoute
  '/profile': typeof ProfileRoute
  '/profile-sett': typeof ProfileSettRoute
  '/quests': typeof QuestsRoute
  '/skills': typeof SkillsRoute
  '/all/$name': typeof AllNameRoute
  '/meet/$id': typeof MeetIdRoute
  '/user-meetings/$id': typeof UserMeetingsIdRoute
  '/user-profile/$id': typeof UserProfileIdRoute
  '/user-quests/$id': typeof UserQuestsIdRoute
  '/user-quests/$page': typeof UserQuestsPageRoute
  '/event/$name/$id': typeof EventNameIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/achievments': typeof AchievmentsRoute
  '/calendar': typeof CalendarRoute
  '/create-fastMeet': typeof CreateFastMeetRoute
  '/createMeet': typeof CreateMeetRoute
  '/fastMeet-sett': typeof FastMeetSettRoute
  '/favourites': typeof FavouritesRoute
  '/fill-profile': typeof FillProfileRoute
  '/history': typeof HistoryRoute
  '/inventory': typeof InventoryRoute
  '/invite': typeof InviteRoute
  '/meeting-edit': typeof MeetingEditRoute
  '/meetings': typeof MeetingsRoute
  '/my-meetings': typeof MyMeetingsRoute
  '/notif': typeof NotifRoute
  '/people': typeof PeopleRoute
  '/points': typeof PointsRoute
  '/profile': typeof ProfileRoute
  '/profile-sett': typeof ProfileSettRoute
  '/quests': typeof QuestsRoute
  '/skills': typeof SkillsRoute
  '/all/$name': typeof AllNameRoute
  '/meet/$id': typeof MeetIdRoute
  '/user-meetings/$id': typeof UserMeetingsIdRoute
  '/user-profile/$id': typeof UserProfileIdRoute
  '/user-quests/$id': typeof UserQuestsIdRoute
  '/user-quests/$page': typeof UserQuestsPageRoute
  '/event/$name/$id': typeof EventNameIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/achievments': typeof AchievmentsRoute
  '/calendar': typeof CalendarRoute
  '/create-fastMeet': typeof CreateFastMeetRoute
  '/createMeet': typeof CreateMeetRoute
  '/fastMeet-sett': typeof FastMeetSettRoute
  '/favourites': typeof FavouritesRoute
  '/fill-profile': typeof FillProfileRoute
  '/history': typeof HistoryRoute
  '/inventory': typeof InventoryRoute
  '/invite': typeof InviteRoute
  '/meeting-edit': typeof MeetingEditRoute
  '/meetings': typeof MeetingsRoute
  '/my-meetings': typeof MyMeetingsRoute
  '/notif': typeof NotifRoute
  '/people': typeof PeopleRoute
  '/points': typeof PointsRoute
  '/profile': typeof ProfileRoute
  '/profile-sett': typeof ProfileSettRoute
  '/quests': typeof QuestsRoute
  '/skills': typeof SkillsRoute
  '/all/$name': typeof AllNameRoute
  '/meet/$id': typeof MeetIdRoute
  '/user-meetings/$id': typeof UserMeetingsIdRoute
  '/user-profile/$id': typeof UserProfileIdRoute
  '/user-quests/$id': typeof UserQuestsIdRoute
  '/user-quests/$page': typeof UserQuestsPageRoute
  '/event/$name/$id': typeof EventNameIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/achievments'
    | '/calendar'
    | '/create-fastMeet'
    | '/createMeet'
    | '/fastMeet-sett'
    | '/favourites'
    | '/fill-profile'
    | '/history'
    | '/inventory'
    | '/invite'
    | '/meeting-edit'
    | '/meetings'
    | '/my-meetings'
    | '/notif'
    | '/people'
    | '/points'
    | '/profile'
    | '/profile-sett'
    | '/quests'
    | '/skills'
    | '/all/$name'
    | '/meet/$id'
    | '/user-meetings/$id'
    | '/user-profile/$id'
    | '/user-quests/$id'
    | '/user-quests/$page'
    | '/event/$name/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/achievments'
    | '/calendar'
    | '/create-fastMeet'
    | '/createMeet'
    | '/fastMeet-sett'
    | '/favourites'
    | '/fill-profile'
    | '/history'
    | '/inventory'
    | '/invite'
    | '/meeting-edit'
    | '/meetings'
    | '/my-meetings'
    | '/notif'
    | '/people'
    | '/points'
    | '/profile'
    | '/profile-sett'
    | '/quests'
    | '/skills'
    | '/all/$name'
    | '/meet/$id'
    | '/user-meetings/$id'
    | '/user-profile/$id'
    | '/user-quests/$id'
    | '/user-quests/$page'
    | '/event/$name/$id'
  id:
    | '__root__'
    | '/'
    | '/achievments'
    | '/calendar'
    | '/create-fastMeet'
    | '/createMeet'
    | '/fastMeet-sett'
    | '/favourites'
    | '/fill-profile'
    | '/history'
    | '/inventory'
    | '/invite'
    | '/meeting-edit'
    | '/meetings'
    | '/my-meetings'
    | '/notif'
    | '/people'
    | '/points'
    | '/profile'
    | '/profile-sett'
    | '/quests'
    | '/skills'
    | '/all/$name'
    | '/meet/$id'
    | '/user-meetings/$id'
    | '/user-profile/$id'
    | '/user-quests/$id'
    | '/user-quests/$page'
    | '/event/$name/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AchievmentsRoute: typeof AchievmentsRoute
  CalendarRoute: typeof CalendarRoute
  CreateFastMeetRoute: typeof CreateFastMeetRoute
  CreateMeetRoute: typeof CreateMeetRoute
  FastMeetSettRoute: typeof FastMeetSettRoute
  FavouritesRoute: typeof FavouritesRoute
  FillProfileRoute: typeof FillProfileRoute
  HistoryRoute: typeof HistoryRoute
  InventoryRoute: typeof InventoryRoute
  InviteRoute: typeof InviteRoute
  MeetingEditRoute: typeof MeetingEditRoute
  MeetingsRoute: typeof MeetingsRoute
  MyMeetingsRoute: typeof MyMeetingsRoute
  NotifRoute: typeof NotifRoute
  PeopleRoute: typeof PeopleRoute
  PointsRoute: typeof PointsRoute
  ProfileRoute: typeof ProfileRoute
  ProfileSettRoute: typeof ProfileSettRoute
  QuestsRoute: typeof QuestsRoute
  SkillsRoute: typeof SkillsRoute
  AllNameRoute: typeof AllNameRoute
  MeetIdRoute: typeof MeetIdRoute
  UserMeetingsIdRoute: typeof UserMeetingsIdRoute
  UserProfileIdRoute: typeof UserProfileIdRoute
  UserQuestsIdRoute: typeof UserQuestsIdRoute
  UserQuestsPageRoute: typeof UserQuestsPageRoute
  EventNameIdRoute: typeof EventNameIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AchievmentsRoute: AchievmentsRoute,
  CalendarRoute: CalendarRoute,
  CreateFastMeetRoute: CreateFastMeetRoute,
  CreateMeetRoute: CreateMeetRoute,
  FastMeetSettRoute: FastMeetSettRoute,
  FavouritesRoute: FavouritesRoute,
  FillProfileRoute: FillProfileRoute,
  HistoryRoute: HistoryRoute,
  InventoryRoute: InventoryRoute,
  InviteRoute: InviteRoute,
  MeetingEditRoute: MeetingEditRoute,
  MeetingsRoute: MeetingsRoute,
  MyMeetingsRoute: MyMeetingsRoute,
  NotifRoute: NotifRoute,
  PeopleRoute: PeopleRoute,
  PointsRoute: PointsRoute,
  ProfileRoute: ProfileRoute,
  ProfileSettRoute: ProfileSettRoute,
  QuestsRoute: QuestsRoute,
  SkillsRoute: SkillsRoute,
  AllNameRoute: AllNameRoute,
  MeetIdRoute: MeetIdRoute,
  UserMeetingsIdRoute: UserMeetingsIdRoute,
  UserProfileIdRoute: UserProfileIdRoute,
  UserQuestsIdRoute: UserQuestsIdRoute,
  UserQuestsPageRoute: UserQuestsPageRoute,
  EventNameIdRoute: EventNameIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/achievments",
        "/calendar",
        "/create-fastMeet",
        "/createMeet",
        "/fastMeet-sett",
        "/favourites",
        "/fill-profile",
        "/history",
        "/inventory",
        "/invite",
        "/meeting-edit",
        "/meetings",
        "/my-meetings",
        "/notif",
        "/people",
        "/points",
        "/profile",
        "/profile-sett",
        "/quests",
        "/skills",
        "/all/$name",
        "/meet/$id",
        "/user-meetings/$id",
        "/user-profile/$id",
        "/user-quests/$id",
        "/user-quests/$page",
        "/event/$name/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/achievments": {
      "filePath": "achievments.tsx"
    },
    "/calendar": {
      "filePath": "calendar.tsx"
    },
    "/create-fastMeet": {
      "filePath": "create-fastMeet.tsx"
    },
    "/createMeet": {
      "filePath": "createMeet.tsx"
    },
    "/fastMeet-sett": {
      "filePath": "fastMeet-sett.tsx"
    },
    "/favourites": {
      "filePath": "favourites.tsx"
    },
    "/fill-profile": {
      "filePath": "fill-profile.tsx"
    },
    "/history": {
      "filePath": "history.tsx"
    },
    "/inventory": {
      "filePath": "inventory.tsx"
    },
    "/invite": {
      "filePath": "invite.tsx"
    },
    "/meeting-edit": {
      "filePath": "meeting-edit.tsx"
    },
    "/meetings": {
      "filePath": "meetings.tsx"
    },
    "/my-meetings": {
      "filePath": "my-meetings.tsx"
    },
    "/notif": {
      "filePath": "notif.tsx"
    },
    "/people": {
      "filePath": "people.tsx"
    },
    "/points": {
      "filePath": "points.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/profile-sett": {
      "filePath": "profile-sett.tsx"
    },
    "/quests": {
      "filePath": "quests.tsx"
    },
    "/skills": {
      "filePath": "skills.tsx"
    },
    "/all/$name": {
      "filePath": "all.$name.tsx"
    },
    "/meet/$id": {
      "filePath": "meet.$id.tsx"
    },
    "/user-meetings/$id": {
      "filePath": "user-meetings.$id.tsx"
    },
    "/user-profile/$id": {
      "filePath": "user-profile.$id.tsx"
    },
    "/user-quests/$id": {
      "filePath": "user-quests.$id.tsx"
    },
    "/user-quests/$page": {
      "filePath": "user-quests.$page.tsx"
    },
    "/event/$name/$id": {
      "filePath": "event.$name.$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
