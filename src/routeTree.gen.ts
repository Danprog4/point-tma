/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SkillsImport } from './routes/skills'
import { Route as QuestsImport } from './routes/quests'
import { Route as ProfileImport } from './routes/profile'
import { Route as OnboardingImport } from './routes/onboarding'
import { Route as NotifImport } from './routes/notif'
import { Route as MeetingsImport } from './routes/meetings'
import { Route as InventoryImport } from './routes/inventory'
import { Route as HistoryImport } from './routes/history'
import { Route as CalendarImport } from './routes/calendar'
import { Route as AchievmentsImport } from './routes/achievments'
import { Route as IndexImport } from './routes/index'
import { Route as CreateMeetNameImport } from './routes/createMeet.$name'

// Create/Update Routes

const SkillsRoute = SkillsImport.update({
  id: '/skills',
  path: '/skills',
  getParentRoute: () => rootRoute,
} as any)

const QuestsRoute = QuestsImport.update({
  id: '/quests',
  path: '/quests',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingRoute = OnboardingImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const NotifRoute = NotifImport.update({
  id: '/notif',
  path: '/notif',
  getParentRoute: () => rootRoute,
} as any)

const MeetingsRoute = MeetingsImport.update({
  id: '/meetings',
  path: '/meetings',
  getParentRoute: () => rootRoute,
} as any)

const InventoryRoute = InventoryImport.update({
  id: '/inventory',
  path: '/inventory',
  getParentRoute: () => rootRoute,
} as any)

const HistoryRoute = HistoryImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => rootRoute,
} as any)

const CalendarRoute = CalendarImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => rootRoute,
} as any)

const AchievmentsRoute = AchievmentsImport.update({
  id: '/achievments',
  path: '/achievments',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CreateMeetNameRoute = CreateMeetNameImport.update({
  id: '/createMeet/$name',
  path: '/createMeet/$name',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/achievments': {
      id: '/achievments'
      path: '/achievments'
      fullPath: '/achievments'
      preLoaderRoute: typeof AchievmentsImport
      parentRoute: typeof rootRoute
    }
    '/calendar': {
      id: '/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarImport
      parentRoute: typeof rootRoute
    }
    '/history': {
      id: '/history'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof HistoryImport
      parentRoute: typeof rootRoute
    }
    '/inventory': {
      id: '/inventory'
      path: '/inventory'
      fullPath: '/inventory'
      preLoaderRoute: typeof InventoryImport
      parentRoute: typeof rootRoute
    }
    '/meetings': {
      id: '/meetings'
      path: '/meetings'
      fullPath: '/meetings'
      preLoaderRoute: typeof MeetingsImport
      parentRoute: typeof rootRoute
    }
    '/notif': {
      id: '/notif'
      path: '/notif'
      fullPath: '/notif'
      preLoaderRoute: typeof NotifImport
      parentRoute: typeof rootRoute
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/quests': {
      id: '/quests'
      path: '/quests'
      fullPath: '/quests'
      preLoaderRoute: typeof QuestsImport
      parentRoute: typeof rootRoute
    }
    '/skills': {
      id: '/skills'
      path: '/skills'
      fullPath: '/skills'
      preLoaderRoute: typeof SkillsImport
      parentRoute: typeof rootRoute
    }
    '/createMeet/$name': {
      id: '/createMeet/$name'
      path: '/createMeet/$name'
      fullPath: '/createMeet/$name'
      preLoaderRoute: typeof CreateMeetNameImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/achievments': typeof AchievmentsRoute
  '/calendar': typeof CalendarRoute
  '/history': typeof HistoryRoute
  '/inventory': typeof InventoryRoute
  '/meetings': typeof MeetingsRoute
  '/notif': typeof NotifRoute
  '/onboarding': typeof OnboardingRoute
  '/profile': typeof ProfileRoute
  '/quests': typeof QuestsRoute
  '/skills': typeof SkillsRoute
  '/createMeet/$name': typeof CreateMeetNameRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/achievments': typeof AchievmentsRoute
  '/calendar': typeof CalendarRoute
  '/history': typeof HistoryRoute
  '/inventory': typeof InventoryRoute
  '/meetings': typeof MeetingsRoute
  '/notif': typeof NotifRoute
  '/onboarding': typeof OnboardingRoute
  '/profile': typeof ProfileRoute
  '/quests': typeof QuestsRoute
  '/skills': typeof SkillsRoute
  '/createMeet/$name': typeof CreateMeetNameRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/achievments': typeof AchievmentsRoute
  '/calendar': typeof CalendarRoute
  '/history': typeof HistoryRoute
  '/inventory': typeof InventoryRoute
  '/meetings': typeof MeetingsRoute
  '/notif': typeof NotifRoute
  '/onboarding': typeof OnboardingRoute
  '/profile': typeof ProfileRoute
  '/quests': typeof QuestsRoute
  '/skills': typeof SkillsRoute
  '/createMeet/$name': typeof CreateMeetNameRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/achievments'
    | '/calendar'
    | '/history'
    | '/inventory'
    | '/meetings'
    | '/notif'
    | '/onboarding'
    | '/profile'
    | '/quests'
    | '/skills'
    | '/createMeet/$name'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/achievments'
    | '/calendar'
    | '/history'
    | '/inventory'
    | '/meetings'
    | '/notif'
    | '/onboarding'
    | '/profile'
    | '/quests'
    | '/skills'
    | '/createMeet/$name'
  id:
    | '__root__'
    | '/'
    | '/achievments'
    | '/calendar'
    | '/history'
    | '/inventory'
    | '/meetings'
    | '/notif'
    | '/onboarding'
    | '/profile'
    | '/quests'
    | '/skills'
    | '/createMeet/$name'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AchievmentsRoute: typeof AchievmentsRoute
  CalendarRoute: typeof CalendarRoute
  HistoryRoute: typeof HistoryRoute
  InventoryRoute: typeof InventoryRoute
  MeetingsRoute: typeof MeetingsRoute
  NotifRoute: typeof NotifRoute
  OnboardingRoute: typeof OnboardingRoute
  ProfileRoute: typeof ProfileRoute
  QuestsRoute: typeof QuestsRoute
  SkillsRoute: typeof SkillsRoute
  CreateMeetNameRoute: typeof CreateMeetNameRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AchievmentsRoute: AchievmentsRoute,
  CalendarRoute: CalendarRoute,
  HistoryRoute: HistoryRoute,
  InventoryRoute: InventoryRoute,
  MeetingsRoute: MeetingsRoute,
  NotifRoute: NotifRoute,
  OnboardingRoute: OnboardingRoute,
  ProfileRoute: ProfileRoute,
  QuestsRoute: QuestsRoute,
  SkillsRoute: SkillsRoute,
  CreateMeetNameRoute: CreateMeetNameRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/achievments",
        "/calendar",
        "/history",
        "/inventory",
        "/meetings",
        "/notif",
        "/onboarding",
        "/profile",
        "/quests",
        "/skills",
        "/createMeet/$name"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/achievments": {
      "filePath": "achievments.tsx"
    },
    "/calendar": {
      "filePath": "calendar.tsx"
    },
    "/history": {
      "filePath": "history.tsx"
    },
    "/inventory": {
      "filePath": "inventory.tsx"
    },
    "/meetings": {
      "filePath": "meetings.tsx"
    },
    "/notif": {
      "filePath": "notif.tsx"
    },
    "/onboarding": {
      "filePath": "onboarding.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/quests": {
      "filePath": "quests.tsx"
    },
    "/skills": {
      "filePath": "skills.tsx"
    },
    "/createMeet/$name": {
      "filePath": "createMeet.$name.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
